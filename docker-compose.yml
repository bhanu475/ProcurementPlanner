version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: procurement-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - procurement-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: procurement-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - procurement-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: procurement-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=ProcurementPlannerDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
      - ConnectionStrings__Redis=redis:6379
      - Jwt__SecretKey=YourSuperSecretKeyThatIsAtLeast32CharactersLong!
      - Jwt__Issuer=ProcurementPlanner
      - Jwt__Audience=ProcurementPlannerUsers
      - Jwt__ExpirationMinutes=60
      - Jwt__RefreshTokenExpirationDays=7
    ports:
      - "5000:5000"
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - procurement-network
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: procurement-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - procurement-network
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  sqlserver_data:
  redis_data:

networks:
  procurement-network:
    driver: bridge